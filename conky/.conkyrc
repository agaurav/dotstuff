###############################################################################
#	Conky Theme	: InfinitySVG
#
#	Current Update by:					Ashish Gaurav
#	Updates and SVG by:					Pablo Angelani
#	Original Updates Infinity and SVG:	Eric Weik
#	Original Infinity theme by:			Harshit Yadav
#	Includes lua code:					Clock Rings by londonali1010 (2009)
#	Feel Free to distribute
#	For Installation Instructions see README
#
#	Colors from haunted .lua and .conkyrc:
#	b7b7b7 (light grey)
#	6f6f6f (medium grey)
#	2c2c2c (dark grey)
#
#	4a89a7 (blue)		hardware / memory / root
#	468626 (blue alt)	
#	e83737 (red)		swap
#	46a646 (green)		user / cpu / home
#	f4732d (orange)		network
#	ebff46 (yellow)		network
#	FFA300 (br. orange)	text highlights
#
#	Changelog:
#	 + v1.0.1:	Initial version by Harshit Yadav
#	 + [All further changes tracked in the git repository.]
###############################################################################


#########################################
############# Conky settings ############
#########################################

background no
update_interval 1

cpu_avg_samples 2
net_avg_samples 2

override_utf8_locale yes

double_buffer yes
no_buffers yes

text_buffer_size 4096
#imlib_cache_size 0

## 

#########################################
######### Window specifications #########
#########################################

# Allow conky to handle transparency -- all or nothing
#own_window yes
#own_window_type conky
#own_window_transparent yes

# Allow compiz to handle transparency manually (you will need to add Conky to compiz)
#own_window yes
#own_window_type normal
#own_window_transparent yes
own_window_hints undecorate,sticky,skip_taskbar,skip_pager,below
#own_window_hints undecorate,sticky,skip_taskbar,below

# Allow conky to handle transparency (with percentages) with a compositor
# From http://blog.mmassonnet.info/2011/08/xfce-48-with-conky.html)
own_window yes
#window_own_type desktop
own_window_hints undecorated,below,sticky,skip_taskbar,skip_pager	# make it behave like it belongs to the desktop
own_window_argb_visual yes	# true transparency, a compositor has to be active
own_window_argb_value 0	# make the background semi-transparent


## This Resolution is set according to the sreen resolution of 1440x900

minimum_size 3840 2160
maximum_width 1524

#alignment top_left
alignment top_right
gap_x 8
gap_y 8


#########################################
########### Graphics settings ###########
#########################################
#border_inner_margin 2
#border_outer_margin 2

draw_shades yes
draw_outline no
draw_borders no
draw_graph_borders no

## Text settings
#use_spacer left #none
#pad_percents 2
use_xft yes
xftfont caviar dreams:size=8
xftalpha 2

uppercase no

#temperature_unit fahrenheit
temperature_unit celsius

# Color settings
default_color eaeaea

color1 b7b7b7	#(light grey)
color2 6f6f6f	#(medium grey)
color2 3c3c3c	#(dark grey)
color3 fa8967	#(teal / blue)
color4 982727	#(red)
color5 7b7a13	#(yellow)
color6 46a646	#(green)
color7 9c6043	#(orange)
color8 ffa300	#(bright orange)


## Lua: load clock rings.
lua_load ~/.conky/scripts/haunted.lua
lua_draw_hook_pre clock_rings


## Possible variables to be used:
#
# 	Variable          Arguments     Description

# 	addr              (interface)   IP address for an interface
# 	acpiacadapter                   ACPI ac adapter state.                   
# 	acpifan                         ACPI fan state                           
# 	acpitemp                        ACPI temperature.                        
# 	adt746xcpu                      CPU temperature from therm_adt746x       
# 	adt746xfan                      Fan speed from therm_adt746x             
# 	alignr            (num)         Right-justify text, with space of N
# 	alignc                          Align text to centre
# 	battery           (num)         Remaining capasity in ACPI or APM        
# 					battery. ACPI battery number can be      
# 					given as argument (default is BAT0).     
# 	buffers                         Amount of memory buffered                
# 	cached                          Amount of memory cached                  
# 	color             (color)       Change drawing color to color            
# 	cpu                             CPU usage in percents                    
# 	cpubar            (height)      Bar that shows CPU usage, height is      
# 					bar's height in pixels                 
# 	cpugraph          (height),(width) (gradient colour 1) (gradient colour 2)
# 					CPU usage graph, with optional colours in hex,
# 					minus the #.
# 	downspeed         net           Download speed in kilobytes              
# 	downspeedf        net           Download speed in kilobytes with one     
# 					decimal                                  
# 	downspeedgraph    net (height),(width) (gradient colour 1) (gradient colour 2)
# 					Download speed graph, colours defined in
# 					hex, minus the #.
# 	exec              shell command Executes a shell command and displays    
# 					the output in conky. warning: this      
# 					takes a lot more resources than other    
# 					variables. I'd recommend coding wanted   
# 					behaviour in C and posting a patch :-).  
# 	execbar           shell command Same as exec, except if the first value
# 					return is a value between 0-100, it
# 					will use that number for a bar.
# 					The size for the bar is currently fixed,
# 					but that may change in the future.
# 	execgraph         shell command Same as execbar, but graphs values
# 	execi             interval, shell command
#  					Same as exec but with specific interval. 
# 					Interval can't be less than              
# 					update_interval in configuration.        
#	font		  font		Specify a different font.  Only applies
#					to one line.
# 	fs_bar            (height), (fs)Bar that shows how much space is used on 
# 					a file system. height is the height in   
# 					pixels. fs is any file on that file      
# 					system.                                  
# 	fs_free           (fs)          Free space on a file system available    
# 					for users.                               
# 	fs_free_perc      (fs)          Free percentage of space on a file       
# 					system available for users.              
# 	fs_size           (fs)          File system size                         
# 	fs_used           (fs)          File system used space                   
# 	hr                (height)      Horizontal line, height is the height in 
# 					pixels                                   
# 	i2c               (dev), type, n  I2C sensor from sysfs (Linux 2.6). dev   
# 					may be omitted if you have only one I2C  
# 					device. type is either in (or vol)       
# 					meaning voltage, fan meaning fan or
# 					temp/tempf (first in C, second in F)
# 					meaning temperature. n is number of the  
# 					sensor. See /sys/bus/i2c/devices/ on     
# 					your local computer.                     
# 	if_running        (process)     if PROCESS is running, display
# 					everything if_running and the matching $endif
# 	if_existing       (file)        if FILE exists, display everything between
# 					if_existing and the matching $endif
# 	if_mounted        (mountpoint)  if MOUNTPOINT is mounted, display everything between
# 					if_mounted and the matching $endif
# 	else                            Text to show if any of the above are not true
# 	kernel                          Kernel version                          
# 	linkstatus        (interface)   Get the link status for wireless connections
# 	loadavg           (1), (2), (3) System load average, 1 is for past 1     
# 					minute, 2 for past 5 minutes and 3 for   
# 					past 15 minutes.                         
# 	machine                         Machine, i686 for example                
# 	mails                           Mail count in mail spool. You can use    
# 					program like fetchmail to get mails from 
# 					some server using your favourite         
# 					protocol. See also new_mails.            
# 	mem                             Amount of memory in use                  
# 	membar            (height)      Bar that shows amount of memory in use   
# 	memmax                          Total amount of memory                   
# 	memperc                         Percentage of memory in use
# 	
# 	metar_ob_time
# 	metar_temp
# 	metar_tempf                     Temp in F
# 	metar_windchill
# 	metar_dew_point                 There are a bunch of these
# 	metar_rh                        and they are self-explanatory
# 	metar_windspeed
# 	metar_winddir
# 	metar_swinddir
# 	metar_cloud
# 	metar_u2d_time
# 	
# 	ml_upload_counter               total session upload in mb
# 	ml_download_counter             total session download in mb
# 	ml_nshared_files                number of shared files
# 	ml_shared_counter               total session shared in mb, buggy
# 					in some mldonkey versions
# 	ml_tcp_upload_rate              tcp upload rate in kb/s
# 	ml_tcp_download_rate            tcp download rate in kb/s
# 	ml_udp_upload_rate              udp upload rate in kb/s
# 	ml_udp_download_rate            udp download rate in kb/s
# 	ml_ndownloaded_files            number of completed files
# 	ml_ndownloading_files           number of downloading files
# 	
# 	mpd_artist			Artist in current MPD song
# 					(must be enabled at compile)
# 	mpd_album			Album in current MPD song
# 	mpd_bar           (height)      Bar of mpd's progress
# 	mpd_bitrate                     Bitrate of current song
# 	mpd_status                      Playing, stopped, et cetera.
# 	mpd_title			Title of current MPD song
# 	mpd_vol				MPD's volume
# 	mpd_elapsed                     Song's elapsed time
# 	mpd_length                      Song's length
# 	mpd_percent                     Percent of song's progress
# 	new_mails                       Unread mail count in mail spool.         
# 	nodename                        Hostname                                 
# 	outlinecolor      (color)       Change outline color                     
# 	pre_exec          shell command Executes a shell command one time before 
# 					conky displays anything and puts output 
# 					as text.                                 
# 	processes                       Total processes (sleeping and running)   
# 	running_processes               Running processes (not sleeping),        
# 					requires Linux 2.6                       
# 	shadecolor        (color)       Change shading color                     
# 	stippled_hr       (space),      Stippled (dfontashed) horizontal line        
# 			(height)        
# 	swapbar           (height)      Bar that shows amount of swap in use     
# 	swap                            Amount of swap in use                    
# 	swapmax                         Total amount of swap                     
# 	swapperc                        Percentage of swap in use                
# 	sysname                         System name, Linux for example           
# 	offset            pixels        Move text over by N pixels
# 	tail              logfile, lines (interval)
# 					Displays last N lines of supplied text
# 					text file.  If interval is not supplied,
# 					Conky assumes 2x Conky's interval.
# 					Max of 30 lines.
# 					Max of 30 lines can be displayed.
# 	time              (format)      Local time, see man strftime to get more 
# 					information about format                 
# 	totaldown         net           Total download, overflows at 4 GB on     
# 					Linux with 32-bit arch and there doesn't 
# 					seem to be a way to know how many times  
# 					it has already done that before conky   
# 					has started.                            
# 	top               type, num     This takes arguments in the form:
# 					top <name> <number>
# 					Basically, processes are ranked from 
# 					highest to lowest in terms of cpu
# 					usage, which is what <num> represents.
# 					The types are: "name", "pid", "cpu", and
# 					"mem".
# 					There can be a max of 10 processes listed.
# 	top_mem           type, num     Same as top, except sorted by mem usage
# 					instead of cpu
# 	totalup           net           Total upload, this one too, may overflow 
# 	updates                         Number of updates (for debugging)        
# 	upspeed           net           Upload speed in kilobytes                
# 	upspeedf          net           Upload speed in kilobytes with one       
# 					decimal                                  
# 	upspeedgraph      net (height),(width)  (gradient colour 1) (gradient colour 2)
# 					Upload speed graph, colours defined in
# 					hex, minus the #.
# 	uptime                          Uptime                                   
# 	uptime_short                    Uptime in a shorter format               
# 	
# 	seti_prog                       Seti@home current progress
# 	seti_progbar      (height)      Seti@home current progress bar
# 	seti_credit                     Seti@home total user credit
#
# variable is given either in format $variable or in ${variable}. Latter
# allows characters right after the variable and must be used in network
# stuff because of an argument


## Adjust these fields according to the your screen size I have modded them for 1440X900

TEXT
## Date
${offset 308}${color}${font GE Inspira:pixelsize=128}${time %H:%M}${font}${voffset -84}${voffset 5}${color8}${font GE Inspira:pixelsize=48}${time %d} ${voffset -15}${color}${font GE Inspira:pixelsize=28}${exec echo $(echo $(date +%B) | cut -c1 | tr '[a-z]' '[A-Z]')$(echo $(date +%B) | cut -c2-)} ${time %Y}${font}
${voffset 64}${offset 348}${font GE Inspira:pixelsize=64}${exec echo $(echo $(date +%A) | cut -c1 | tr '[a-z]' '[A-Z]')$(echo $(date +%A) | cut -c2-)}${font} 

${image ~/Pictures/background.png -p -28,0 }

${voffset -292}
##WEATHER 
${texeci 600 curl -s "http://weather.yahooapis.com/forecastrss?w=2295020&u=c" -o ~/.cache/weather.xml}
${texeci 900 cp -f ~/.conky/scripts/weather/`grep "yweather:condition" ~/.cache/weather.xml | grep -o "code=\"[^\"]*\"" | grep -o "\"[^\"]*\"" | grep -o "[^\"]*"`.png ~/.cache/weather.png}
${offset 32}${font Open Sans Light:size=74}${color}${offset 864}${texeci 900 grep "yweather:condition" ~/.cache/weather.xml | grep -o "temp=\"[^\"]*\"" | grep -o "\"[^\"]*\"" | grep -o "[^\"]*"}°${font}

${voffset -32}
${offset 910}${font Open Sans Light:size=40}${color}${texeci 900 grep "yweather:location" ~/.cache/weather.xml | grep -o "city=\"[^\"]*\"" | grep -o "\"[^\"]*\"" | grep -o "[^\"]*"} ${texeci 900 grep "yweather:location" ~/.cache/weather.xml | grep -o "country=\"[^\"]*\"" | grep -o "\"[^\"]*\"" | grep -o "[^\"]*"}${font}


${voffset -168}
${offset 1246}${font Ubuntu:pixelsize=24}${color}${texeci 900 grep "yweather:condition" ~/.cache/weather.xml | grep -o "text=\"[^\"]*\"" | grep -o "\"[^\"]*\"" | grep -o "[^\"]*"  | tr '[a-z]' '[A-Z]'}

${voffset -116}
${offset 1274}${font Ubuntu:pixelsize=24}${color}${texeci 900 grep "yweather:wind" ~/.cache/weather.xml | grep -o "speed=\"[^\"]*\"" | grep -o "\"[^\"]*\"" | grep -o "[^\"]*"}${texeci 900 grep "yweather:units" ~/.cache/weather.xml | grep -o "speed=\"[^\"]*\"" | grep -o "\"[^\"]*\"" | grep -o "[^\"]*"}

${voffset -80}
${offset 1468}${font Ubuntu:pixelsize=24}${texeci 900 grep "yweather:atmosphere" ~/.cache/weather.xml | grep -o "humidity=\"[^\"]*\"" | grep -o "\"[^\"]*\"" | grep -o "[^\"]*"}%

${image ~/.cache/weather.png -p 1094,16 -s 128x128}
${image ~/.conky/scripts/weather/wind.png -p 1228,34 -s 32x32}
${image ~/.conky/scripts/weather/humidity.png -p 1420,34 -s 32x32}
###

${voffset 8}${offset 316}${color}${hr 2}

${offset 304}${voffset -8}${font Ubuntu:pixelsize=27}${color8}HD ${offset 9}${color6}${exec df -h | grep "/dev/sd*"  | awk '{ SUM += $3} END { print SUM "GB" }'} / ${color 4a89a7}${exec df -h | grep "/dev/sd*"  | awk '{ SUM += $2} END { print SUM "GB" }'}${offset 18}${color8}RAM ${offset 9}${color6}$mem / ${color 4a89a7}$memmax${offset 18}${color8}CPU ${offset 9}${color4}${lua_parse pad ${cpu cpu0}}% ${offset 9}${color5}${lua_parse pad ${cpu cpu1}}% ${offset 9}${color4}${lua_parse pad ${cpu cpu2}}% ${offset 9}${color5}${lua_parse pad ${cpu cpu3}}% ${offset 9}${color4}${lua_parse pad ${cpu cpu4}}% ${offset 9}${color5}${lua_parse pad ${cpu cpu5}}% ${offset 9}${color4}${lua_parse pad ${cpu cpu6}}% ${offset 9}${color5}${lua_parse pad ${cpu cpu7}}%
##FILE SYSTEM
#
${voffset -74}
${offset 102}${voffset 236}${font Monospace:size=12}${color 4a89a7}root:${tab 4}${font Santana:size=9}${color}${fs_used /}/${fs_size /}
${offset 102}${voffset 7}${color6}${font Monospace:size=12}home:${tab 4}${font Santana:size=9}${color}${fs_used /home}/${fs_size /home}
${offset 102}${voffset 8}${color4}${font Monospace:size=12}data:${tab 4}${font Santana:size=9}${color}${fs_used /var}/${fs_size /var}
${offset 552}${voffset -144}${font Santana:size=18}${color7} Kernel:${color1} ${kernel} 
${offset 550}${font Monospace:size=15}${color 4a89a7} Uptime : ${color1}${uptime}
${offset 1062}${voffset -164}${font Santana:size=16}${color7}${exec whoami}${color2}@${color}${nodename}
${offset 1062}${font Monospace:size=10}${color6} Top (CPU):${tab 2}${offset 9}${color}${top name 5} ${top cpu 5}
${offset 1062}${font Monospace:size=10}${color6} Top (RAM):${tab 2}${offset 9}${color}${top_mem name 5} ${top_mem mem 5}
${offset 1148}${voffset 48}${color}${font Santana:size=16}${color7} ashish${color2}@${color}archsaber.com
#${offset 830}${font Monospace:size=9}${color5}${texeci 151 ~/a.py}
${offset 1156}${font Monospace:size=14}${color5}${texeci 600 ~/.conky/scripts/mail/gmail.py}
${offset 718}${voffset 52}${color7}${font Santana:size=16}IP Address : ${color}${addr wlp7s0}
${offset 718}${font Monospace:size=14}${color4}Down: ${offset 9}${color}${downspeed wlp7s0}/s ${tab 4}${color4}Up:${tab 4}${color}${upspeed wlp7s0} /s
${offset 718}${color}${font Monospace:size=14}${color 4a89a7}TCP Connections: ${color}${tcp_portmon 1 65535 count}

# Positioning eset for static text examples below
${voffset -322}
# Static text example: Logo
${offset 124}${color}${font Ubuntu:pixelsize=44}${color7}ArchShip Beta ${color2}0.1
# Static text example: Multi-line
#${offset 120}$font${color 6f6f6f}random text can go here
#${offset 120}and here...
#${offset 120}and here...
